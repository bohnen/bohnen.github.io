<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: STG2014 | A Project Manager's note]]></title>
  <link href="http://bohnen.github.io/blog/categories/stg2014/atom.xml" rel="self"/>
  <link href="http://bohnen.github.io/"/>
  <updated>2014-01-18T20:39:39+09:00</updated>
  <id>http://bohnen.github.io/</id>
  <author>
    <name><![CDATA[bohnen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SGT2014 why do we use scrum]]></title>
    <link href="http://bohnen.github.io/blog/2014/01/16/why-do-we-use-scrum/"/>
    <updated>2014-01-16T20:10:03+09:00</updated>
    <id>http://bohnen.github.io/blog/2014/01/16/why-do-we-use-scrum</id>
    <content type="html"><![CDATA[<p>DeNAの方の講演のメモ。少し遅れて参加したため、知花さんの講演しか聴けなかった。</p>

<ul>
<li>知花 里香氏</li>
<li>貝瀬 岳志氏</li>
</ul>


<p>失敗談をベースに話している</p>

<!--more-->


<h2>失敗1: 細かい質問に対応できない</h2>

<ul>
<li>最適なサイクルは? といった、実務上の細かい質問に対応できない。</li>
</ul>


<p>細かい質問を解決するのがScrum Masterの仕事ではなくて、ガイド役
安易にSprintを開始してはならない、というのは確かにそうだろう。自分達でやってはいけないことリストを作るとよいかもしれない。</p>

<h2>失敗2: POがPOの仕事ができない</h2>

<p>チームでビジョンが明確になっていない。チームでビジョンを作る必要がある。
チームビジョンをどう作るか。</p>

<ul>
<li>GROWモデル &ndash; Goal Reallity(現状) Option Will（将来）</li>
</ul>


<p>GROWという考え方は初耳だったが、現状とゴールとその先、と理解するとしっくりきた。
最終的なプロジェクトのアウトプットは、さらに上位のレベルの要求と合致していなければならないと思う。
ただ、オプションやゴールの設定は、チームにまかせることができる。方向性と、どこまでがチームの管轄か、という両方を
表しているという点が良さそうに思え、試して見たい方法だった。</p>

<p>実際にプロジェクトを運営していても、ロードマップ（マイルストーン）の合意と、その到達点（何ができていればいいのか？）は明確にしなければならない。その先や現状というのは、方向性を確認するために必要だ。</p>

<p>日常的にチームを運営するという観点からは、チームルールの定義も必要だと思った。</p>

<h2>失敗3: Scrumに固執する</h2>

<ul>
<li>Scrumを押しつけない</li>
</ul>


<p>問題解決を図るのが目的であって、Scrumを行うのが目的ではない。
ただ、よく分からないときの導きとして、テンプレートとしての「典型的な」手法があってもいいかもしれない。</p>

<h2>Summary</h2>

<ul>
<li>課題の本質を見失わない</li>
<li>あるべき論が先行してしまってはダメ</li>
<li>ビジョン合意なくしてチーム運営を始めない</li>
<li>スクラム屋にならない</li>
</ul>


<h2>INFO</h2>

<ul>
<li>Scrum master&rsquo;s night というイベントをやる予定。facebookにページを作ったそう。</li>
</ul>


<h2>Star Map</h2>

<p>プロジェクトに必要なスキルと、それを保有しているかどうかのマトリクス。
スキルのトランスファー、やりたいかやりたくないかということを可視化する。これも初めて聞いた。
スキル不足 = プロジェクトリスクでもあり、改善を図るポイントでもあるが、プロジェクトとして
抜けているスキルを、自発的に埋めたいかどうかというのは確認のポイントとして考えたことはなかった。
インフラが好きな人もいれば、UIが好きって人もいるしね。</p>

<h2>雑感</h2>

<ul>
<li>Sprintの適切なサイズはなんだろう?

<ul>
<li>実際にやってみた感想としては、一週間は短すぎる。日本は祝日が多いので、一週間は短くなることがある
(1日休みがあると、20%が作業時間から消える)</li>
<li>2週間だと、1日は10%。よくあるルールとして、遅延が10%以上になると警告とするというルールがあるが、
2週間に1日休みがあると、丁度遅延ぎりぎりのバッファを含んだ数値となる。</li>
<li>2週間1サイクルとして、1日はバッファ、休日、レトロスペクティブとすると丁度よさそう。</li>
</ul>
</li>
</ul>


<p>目に見える進捗が必要。これは、何でもいい。Information Radiatorとしての道具は、なんでもいいが、
皆が見えて更新しないと気持ち悪いという状態にしなければならないなと思う。</p>
]]></content>
  </entry>
  
</feed>
